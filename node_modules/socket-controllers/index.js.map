{"version":3,"sources":["../../src/index.ts"],"names":[],"mappings":";;;;;AAAA,8EAA2E;AAC3E,wFAAmF;AACnF,uEAAoE;AAGpE,4EAA4E;AAC5E,iBAAiB;AACjB,4EAA4E;AAE5E;;GAEG;AACH,yBAAmC,EAAK,EAAE,OAAkC;IACxE,cAAc,CAAC,EAAE,EAAE,OAAO,IAAI,EAAE,CAAC,CAAC;IAClC,MAAM,CAAC,EAAE,CAAC;AACd,CAAC;AAHD,0CAGC;AAED;;GAEG;AACH,4BAAmC,IAAY,EAAE,OAAkC;IAC/E,IAAM,EAAE,GAAG,OAAO,CAAC,WAAW,CAAC,CAAC,IAAI,CAAC,CAAC;IACtC,cAAc,CAAC,EAAE,EAAE,OAAO,IAAI,EAAE,CAAC,CAAC;IAClC,MAAM,CAAC,EAAE,CAAC;AACd,CAAC;AAJD,gDAIC;AAED;;GAEG;AACH,wBAAwB,EAAO,EAAE,OAAiC;IAC9D,IAAM,QAAQ,GAAG,IAAI,mDAAwB,CAAC,EAAE,CAAC,CAAC;IAElD,mEAAmE;IACnE,EAAE,CAAC,CAAC,OAAO,IAAI,OAAO,CAAC,WAAW,IAAI,OAAO,CAAC,WAAW,CAAC,MAAM,CAAC;QAC7D,6DAA4B,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;IAEtD,EAAE,CAAC,CAAC,OAAO,CAAC,mBAAmB,KAAK,SAAS,CAAC,CAAC,CAAC;QAC5C,QAAQ,CAAC,mBAAmB,GAAG,OAAO,CAAC,mBAAmB,CAAC;IAC/D,CAAC;IAAC,IAAI,CAAC,CAAC;QACJ,QAAQ,CAAC,mBAAmB,GAAG,IAAI,CAAC;IACxC,CAAC;IAED,QAAQ,CAAC,4BAA4B,GAAG,OAAO,CAAC,4BAA4B,CAAC;IAC7E,QAAQ,CAAC,4BAA4B,GAAG,OAAO,CAAC,4BAA4B,CAAC;IAE7E,sDAAsD;IACtD,QAAQ,CAAC,OAAO,EAAE,CAAC;AACvB,CAAC;AAED,4EAA4E;AAC5E,0BAA0B;AAC1B,4EAA4E;AAE5E;;GAEG;AACH;IACI,EAAE,CAAC,CAAC,CAAE,MAAc,CAAC,oCAAoC,CAAC;QACrD,MAAc,CAAC,oCAAoC,GAAG,IAAI,yCAAmB,EAAE,CAAC;IAErF,MAAM,CAAE,MAAc,CAAC,oCAAoC,CAAC;AAChE,CAAC;AALD,gEAKC;AAED,4EAA4E;AAC5E,wBAAwB;AACxB,4EAA4E;AAE5E,iCAA4B;AAC5B,kCAA6B","file":"index.js","sourcesContent":["import {MetadataArgsStorage} from \"./metadata-builder/MetadataArgsStorage\";\nimport {importClassesFromDirectories} from \"./util/DirectoryExportedClassesLoader\";\nimport {SocketControllerExecutor} from \"./SocketControllerExecutor\";\nimport {SocketControllersOptions} from \"./SocketControllersOptions\";\n\n// -------------------------------------------------------------------------\n// Main Functions\n// -------------------------------------------------------------------------\n\n/**\n * Registers all loaded actions in your express application.\n */\nexport function useSocketServer<T>(io: T, options?: SocketControllersOptions): T {\n    createExecutor(io, options || {});\n    return io;\n}\n\n/**\n * Registers all loaded actions in your express application.\n */\nexport function createSocketServer(port: number, options?: SocketControllersOptions): any {\n    const io = require(\"socket.io\")(port);\n    createExecutor(io, options || {});\n    return io;\n}\n\n/**\n * Registers all loaded actions in your express application.\n */\nfunction createExecutor(io: any, options: SocketControllersOptions): void {\n    const executor = new SocketControllerExecutor(io);\n\n    // second import all controllers and middlewares and error handlers\n    if (options && options.controllers && options.controllers.length)\n        importClassesFromDirectories(options.controllers);\n\n    if (options.useClassTransformer !== undefined) {\n        executor.useClassTransformer = options.useClassTransformer;\n    } else {\n        executor.useClassTransformer = true;\n    }\n\n    executor.classToPlainTransformOptions = options.classToPlainTransformOptions;\n    executor.plainToClassTransformOptions = options.plainToClassTransformOptions;\n\n    // run socket controller register and other operations\n    executor.execute();\n}\n\n// -------------------------------------------------------------------------\n// Global Metadata Storage\n// -------------------------------------------------------------------------\n\n/**\n * Gets the metadata arguments storage.\n */\nexport function defaultMetadataArgsStorage(): MetadataArgsStorage {\n    if (!(global as any).socketControllersMetadataArgsStorage)\n        (global as any).socketControllersMetadataArgsStorage = new MetadataArgsStorage();\n\n    return (global as any).socketControllersMetadataArgsStorage;\n}\n\n// -------------------------------------------------------------------------\n// Commonly Used exports\n// -------------------------------------------------------------------------\n\nexport * from \"./container\";\nexport * from \"./decorators\";\nexport * from \"./SocketControllersOptions\";\nexport * from \"./MiddlewareInterface\";\n"],"sourceRoot":"."}